version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}
    postgres_data: {}
    shared_data: {}
    alert_data: {}
    traefik_certs: {}

networks:
  crondata:
    driver: overlay
    name: inbound
  traefik:
    driver: overlay
    name: traefik

services:
  traefik:
    image: utmstack.azurecr.io/crondata-traefik:latest
    command:
      - "--api"
      - "--docker"
      - "--docker.swarmMode"
      - "--docker.domain=traefik.crondata.atlasinside.com"
      - "--docker.watch"
      - "--logLevel=DEBUG"
      - "--accessLog"
      - "--metrics"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
    networks:
      - traefik
      - crondata
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  prometheus:
    image: utmstack.azurecr.io/crondata-prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
      - shared_data:/etc/prometheus/targets
      - alert_data:/etc/prometheus/alerts
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor	  
    networks:
      - crondata     
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
          - "traefik.frontend.rule=Host:prometheus.crondata.atlasinside.com"
          - "traefik.backend=prometheus"
          - "traefik.port=9090"
          - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  node-exporter:
    image: utmstack.azurecr.io/crondata-node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - crondata
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  alertmanager:
    image: utmstack.azurecr.io/crondata-alertmanager:latest
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    networks:
      - crondata
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
          - "traefik.frontend.rule=Host:alertmanager.crondata.atlasinside.com"
          - "traefik.backend=alertmanager"
          - "traefik.port=9093"
          - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure 

  cadvisor:
    image: utmstack.azurecr.io/crondata-google-cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9001:8080
    networks:
      - crondata
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  grafana:
    image: utmstack.azurecr.io/crondata-grafana
    user: "472"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana_icon.svg:/usr/share/grafana/public/img/grafana_icon.svg:rw
      - ./grafana/home.json:/usr/share/grafana/public/dashboards/home.json:rw
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/defaults.ini:/usr/share/grafana/conf/defaults.ini
    env_file:
      - ./grafana/config.monitoring
    networks:
      - crondata
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.frontend.rule=Host:grafana.crondata.atlasinside.com"
        - "traefik.backend=grafana"
        - "traefik.port=3000"
        - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure

  cron-postgresql:
    image: utmstack.azurecr.io/crondata-postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./postgres/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - crondata
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=CronD4ta.2021*
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=cron_data
    ports:
      - 5432:5432
    command: ["postgres", "-c", "shared_buffers=256MB", "-c", "max_connections=1000"]
  
  panel:
    image: utmstack.azurecr.io/crondata-panel:latest
    volumes: 
      - shared_data:/etc/prometheus/targets
      - alert_data:/etc/prometheus/alerts
    environment:
      - TOMCAT_ADMIN_USER=admin
      - TOMCAT_ADMIN_PASSWORD=CronD4ta.2021*
      - JRE_HOME=/opt/tomcat/bin/jre
      - JAVA_HOME=/opt/tomcat/bin/jre
      - CATALINA_BASE=/opt/tomcat/
      - CATALINA_HOME=/opt/tomcat/
      - LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu 
      - SPRING_PROFILES_ACTIVE=prod,swagger
      - SPRING_DATASOURCE_URL=jdbc:postgresql://cron-postgresql:5432/cron_data
      - CRONDATA_SERVER_HOST=${HOSTNAME}
      - DB_PASS=CronD4ta.2021*
      - PROMETHEUS_TARGET_CONFIG_PATH=/etc/prometheus/targets
      - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
    depends_on: 
      - cron-postgresql
    networks:
      - crondata
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
          - "traefik.frontend.rule=Host:crondata.atlasinside.com"
          - "traefik.backend=panel"
          - "traefik.port=8080"
          - "traefik.docker.network=traefik"  
      restart_policy:
        condition: on-failure

  filebrowser:
    image: "utmstack.azurecr.io/crondata-filebrowser:latest"
    volumes:
      - alert_data:/serv
      - alert_data:/etc/prometheus/alerts
    environment:
      - PASSWORD=CronD4ta.2021*
    depends_on: 
      - prometheus
    networks:
      - crondata
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
          - "traefik.frontend.rule=Host:filebrowser.crondata.atlasinside.com"
          - "traefik.backend=filebrowser"
          - "traefik.port=9091"
          - "traefik.docker.network=traefik"
      restart_policy:
        condition: on-failure
